classdef Attractive < RobotState
    
    properties
        paraboloidal; %booleano che indica se siamo giÃ¡ passati al potenziale paraboloide
    end
    
    methods
        function obj = Attractive(grid)
            %Setting potenziale conico
            obj.state = State.attractive; obj.paraboloidal = false;
            di = sqrt((grid.goal(1)-grid.X).^2 + (grid.goal(2)-grid.Y).^2);
            obj.agradX = (grid.goal(1)-grid.X)./di; obj.agradY = (grid.goal(2)-grid.Y)./di;
            obj.setGrad(obj.agradX,obj.agradY);
        end
        
        function obj = operation(obj,robot,dObstacle)
            if ~obj.paraboloidal && norm([rx,ry]-grid.goal) < 1
                obj.agradX = grid.goal(1)-grid.X;
                obj.agradY = grid.goal(2)-grid.Y;
                obj.setGrad(obj.agradX,obj.agradY);
            end
            if ~isempty(dObstacle)
                bypassing = Bypassing(robot,dObstacle);
                robot.setState(bypassing);
                obj.obstacle = [dObstacle.xc dObstacle.yc];
            end
        end
        
        function obj = entryAction(obj)
            
        end
    end
end
